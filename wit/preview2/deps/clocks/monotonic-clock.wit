/// WASI Monotonic Clock is a clock API intended to let users measure elapsed
/// time.
///
/// It is intended to be portable at least between Unix-family platforms and
/// Windows.
default interface monotonic-clock {
    use poll.poll.{pollable}

    /// A timestamp in nanoseconds.
    type instant = u64

    /// A monotonic clock is a clock which has an unspecified initial value, and
    /// successive reads of the clock will produce non-decreasing values.
    ///
    /// It is intended for measuring elapsed time.
    ///
    /// This [represents a resource](https://github.com/WebAssembly/WASI/blob/main/docs/WitInWasi.md#Resources).
    type monotonic-clock = u32

    /// Read the current value of the clock.
    ///
    /// The clock is monotonic, therefore calling this function repeatedly will
    /// produce a sequence of non-decreasing values.
    now: func(this: monotonic-clock) -> instant

    /// Query the resolution of the clock.
    resolution: func(this: monotonic-clock) -> instant

    /// Create a `pollable` which will resolve once the specified time has been
    /// reached.
    subscribe: func(
        this: monotonic-clock,
        when: instant,
        absolute: bool
    ) -> pollable

    /// Dispose of the specified `monotonic-clock`, after which it may no longer
    /// be used.
    drop-monotonic-clock: func(this: monotonic-clock)
}
