name: Dependencies setup for spin integration tests
description: 'composite action'
inputs:
  rust:
    description: 'setup rust'
    required: false
    default: 'false'
    type: bool
  rust-version:
    description: 'Rust version to setup'
    default: '1.66'
    required: false
    type: string

  rust-wasm:
    description: 'setup rust wasm'
    required: false
    default: 'false'
    type: bool
  rust-cache:
    description: 'setup rust cache'
    required: false
    default: 'false'
    type: bool

  bindle:
    description: 'setup bindle'
    required: false
    default: 'false'
    type: bool
  bindle-version:
    description: 'Bindle version to setup'
    default: 'v0.8.0'
    required: false
    type: string

  nomad:
    description: 'setup nomad'
    required: false
    default: 'false'
    type: bool
  nomad-version:
    description: 'Nomad version to setup'
    default: '1.3.1'
    required: false
    type: string

  hippo:
    description: 'setup hippo'
    required: false
    default: 'false'
    type: bool
  hippo-version:
    description: 'Hippo version to setup'
    default: 'v0.19.0'
    required: false
    type: string

  golang:
    description: 'setup golang'
    required: false
    default: 'false'
    type: bool
  golang-version:
    description: 'golang version to setup'
    default: '1.20'
    required: false
    type: string

  wasmtime:
    description: 'setup wasmtime'
    required: false
    default: 'false'
    type: bool
  wasmtime-version:
    description: 'wasmtime version to setup'
    default: 'v0.36.0'
    required: false
    type: string

  tinygo:
    description: 'setup tinygo'
    required: false
    default: 'false'
    type: bool
  tinygo-version:
    description: 'tinygo version to setup'
    default: 'v0.27.0'
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Install latest Rust stable toolchain
      uses: actions-rs/toolchain@v1
      if: ${{ inputs.rust == 'true' }}
      with:
        toolchain: ${{ inputs.rust-version }}
        default: true
        components: clippy, rustfmt

    - name: "Install Wasm Rust target"
      run: rustup target add wasm32-wasi
      if: ${{ inputs.rust-wasm == 'true' }}
      shell: bash

    - uses: Swatinem/rust-cache@v2
      if: ${{ inputs.rust-cache == 'true' }}
      with:
        shared-key: "${{ runner.os }}-full-${{ hashFiles('./Cargo.lock') }}"

    ## Install bindle
    - name: Install bindle
      uses: rajatjindal/setup-actions/bindle@v0.0.1
      if: ${{ inputs.bindle == 'true' }}
      with:
        version: ${{ inputs.bindle-version }}

    ## Install nomad
    - name: Install nomad
      uses: endocrimes/setup-nomad@0.1.3
      if: ${{ inputs.nomad == 'true' }}
      with:
        version: ${{ inputs.nomad-version }}


    ## Install hippo
    - name: Install hippo
      uses: rajatjindal/setup-actions/hippo@v0.0.1
      if: ${{ inputs.hippo == 'true' }}
      with:
        version: ${{ inputs.hippo-version }}

    ## Install wasmtime
    - name: Install wasmtime
      uses: rajatjindal/setup-actions/wasmtime@v0.0.1
      if: ${{ inputs.wasmtime == 'true' }}
      with:
        version: ${{ inputs.wasmtime-version }}

    - name: "Install Go"
      uses: actions/setup-go@v3
      if: ${{ inputs.golang == 'true' }}
      with:
        go-version: ${{ inputs.golang-version }}

    ## Install tinygo
    - name: "Install TinyGo"
      uses: rajatjindal/setup-actions/tinygo@v0.0.1
      if: ${{ inputs.tinygo == 'true' }}
      with:
        version: ${{ inputs.tinygo-version }}
