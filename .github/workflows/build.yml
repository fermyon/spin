name: Rust
on:
  push:
    branches: [main]
    # Also run on tag pushes, as the release.yml doesn't currently run tests
    tags: ["v*"]
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt

      - name: "Install Wasm Rust targets"
        run: |
          rustup target add wasm32-wasi
          rustup target add wasm32-unknown-unknown
      - uses: engineerd/configurator@v0.0.8
        with:
          name: "bindle-server"
          url: "https://github.com/deislabs/bindle/releases/download/v0.8.0/bindle-v0.8.0-linux-amd64.tar.gz"
          pathInArchive: "bindle-server"

      - name: Cargo Format
        run:
          cargo fmt --all -- --check

      - uses: Swatinem/rust-cache@v1

      - name: Cargo Clippy
        run:
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo Test
        run:
          RUST_LOG=spin=trace cargo test --all --all-features -- --nocapture

      - name: Cargo Build
        run: cargo build --release

      - name: Download previous benchmark results
        # if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: benchmark-data
          path: target/criterion
      - name: Benchmarks
        # if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          cargo install cargo-criterion
          cargo criterion --workspace
      - name: Upload benchmark results
        # if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-data
          path: target/criterion

    # Cancel in-progress runs for PRs
    # https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
    concurrency:
      group: ${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
