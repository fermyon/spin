// Generated by `wit-bindgen` 0.9.0. DO NOT EDIT!
#ifndef __BINDINGS_REACTOR_H
#define __BINDINGS_REACTOR_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  char*ptr;
  size_t len;
} reactor_string_t;

typedef struct {
  uint8_t tag;
  union {
    reactor_string_t provider;
    reactor_string_t invalid_key;
    reactor_string_t invalid_schema;
    reactor_string_t other;
  } val;
} fermyon_spin_config_error_t;

#define FERMYON_SPIN_CONFIG_ERROR_PROVIDER 0
#define FERMYON_SPIN_CONFIG_ERROR_INVALID_KEY 1
#define FERMYON_SPIN_CONFIG_ERROR_INVALID_SCHEMA 2
#define FERMYON_SPIN_CONFIG_ERROR_OTHER 3

typedef struct {
  bool is_err;
  union {
    reactor_string_t ok;
    fermyon_spin_config_error_t err;
  } val;
} reactor_result_string_fermyon_spin_config_error_t;

typedef uint16_t fermyon_spin_http_types_http_status_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} fermyon_spin_http_types_body_t;

typedef struct {
  reactor_string_t f0;
  reactor_string_t f1;
} reactor_tuple2_string_string_t;

typedef struct {
  reactor_tuple2_string_string_t *ptr;
  size_t len;
} fermyon_spin_http_types_headers_t;

typedef struct {
  reactor_tuple2_string_string_t *ptr;
  size_t len;
} fermyon_spin_http_types_params_t;

typedef reactor_string_t fermyon_spin_http_types_uri_t;

typedef uint8_t fermyon_spin_http_types_method_t;

#define FERMYON_SPIN_HTTP_TYPES_METHOD_GET 0
#define FERMYON_SPIN_HTTP_TYPES_METHOD_POST 1
#define FERMYON_SPIN_HTTP_TYPES_METHOD_PUT 2
#define FERMYON_SPIN_HTTP_TYPES_METHOD_DELETE 3
#define FERMYON_SPIN_HTTP_TYPES_METHOD_PATCH 4
#define FERMYON_SPIN_HTTP_TYPES_METHOD_HEAD 5
#define FERMYON_SPIN_HTTP_TYPES_METHOD_OPTIONS 6

typedef struct {
  bool is_some;
  fermyon_spin_http_types_body_t val;
} reactor_option_fermyon_spin_http_types_body_t;

typedef struct {
  fermyon_spin_http_types_method_t method;
  fermyon_spin_http_types_uri_t uri;
  fermyon_spin_http_types_headers_t headers;
  fermyon_spin_http_types_params_t params;
  reactor_option_fermyon_spin_http_types_body_t body;
} fermyon_spin_http_types_request_t;

typedef struct {
  bool is_some;
  fermyon_spin_http_types_headers_t val;
} reactor_option_fermyon_spin_http_types_headers_t;

typedef struct {
  fermyon_spin_http_types_http_status_t status;
  reactor_option_fermyon_spin_http_types_headers_t headers;
  reactor_option_fermyon_spin_http_types_body_t body;
} fermyon_spin_http_types_response_t;

typedef uint8_t fermyon_spin_http_types_http_error_t;

#define FERMYON_SPIN_HTTP_TYPES_HTTP_ERROR_SUCCESS 0
#define FERMYON_SPIN_HTTP_TYPES_HTTP_ERROR_DESTINATION_NOT_ALLOWED 1
#define FERMYON_SPIN_HTTP_TYPES_HTTP_ERROR_INVALID_URL 2
#define FERMYON_SPIN_HTTP_TYPES_HTTP_ERROR_REQUEST_ERROR 3
#define FERMYON_SPIN_HTTP_TYPES_HTTP_ERROR_RUNTIME_ERROR 4
#define FERMYON_SPIN_HTTP_TYPES_HTTP_ERROR_TOO_MANY_REQUESTS 5

typedef fermyon_spin_http_types_request_t fermyon_spin_http_request_t;

typedef fermyon_spin_http_types_response_t fermyon_spin_http_response_t;

typedef fermyon_spin_http_types_http_error_t fermyon_spin_http_http_error_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_http_response_t ok;
    fermyon_spin_http_http_error_t err;
  } val;
} reactor_result_fermyon_spin_http_response_fermyon_spin_http_http_error_t;

typedef fermyon_spin_http_types_request_t fermyon_spin_inbound_http_request_t;

typedef fermyon_spin_http_types_response_t fermyon_spin_inbound_http_response_t;

typedef uint32_t fermyon_spin_key_value_store_t;

typedef struct {
  uint8_t tag;
  union {
    reactor_string_t io;
  } val;
} fermyon_spin_key_value_error_t;

#define FERMYON_SPIN_KEY_VALUE_ERROR_STORE_TABLE_FULL 0
#define FERMYON_SPIN_KEY_VALUE_ERROR_NO_SUCH_STORE 1
#define FERMYON_SPIN_KEY_VALUE_ERROR_ACCESS_DENIED 2
#define FERMYON_SPIN_KEY_VALUE_ERROR_INVALID_STORE 3
#define FERMYON_SPIN_KEY_VALUE_ERROR_NO_SUCH_KEY 4
#define FERMYON_SPIN_KEY_VALUE_ERROR_IO 5

typedef struct {
  bool is_err;
  union {
    fermyon_spin_key_value_store_t ok;
    fermyon_spin_key_value_error_t err;
  } val;
} reactor_result_fermyon_spin_key_value_store_fermyon_spin_key_value_error_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} reactor_list_u8_t;

typedef struct {
  bool is_err;
  union {
    reactor_list_u8_t ok;
    fermyon_spin_key_value_error_t err;
  } val;
} reactor_result_list_u8_fermyon_spin_key_value_error_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_key_value_error_t err;
  } val;
} reactor_result_void_fermyon_spin_key_value_error_t;

typedef struct {
  bool is_err;
  union {
    bool ok;
    fermyon_spin_key_value_error_t err;
  } val;
} reactor_result_bool_fermyon_spin_key_value_error_t;

typedef struct {
  reactor_string_t *ptr;
  size_t len;
} reactor_list_string_t;

typedef struct {
  bool is_err;
  union {
    reactor_list_string_t ok;
    fermyon_spin_key_value_error_t err;
  } val;
} reactor_result_list_string_fermyon_spin_key_value_error_t;

typedef uint8_t fermyon_spin_rdbms_types_db_data_type_t;

#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_BOOLEAN 0
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_INT8 1
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_INT16 2
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_INT32 3
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_INT64 4
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_UINT8 5
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_UINT16 6
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_UINT32 7
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_UINT64 8
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_FLOATING32 9
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_FLOATING64 10
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_STR 11
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_BINARY 12
#define FERMYON_SPIN_RDBMS_TYPES_DB_DATA_TYPE_OTHER 13

typedef struct {
  uint8_t tag;
  union {
    bool boolean;
    int8_t int8;
    int16_t int16;
    int32_t int32;
    int64_t int64;
    uint8_t uint8;
    uint16_t uint16;
    uint32_t uint32;
    uint64_t uint64;
    float floating32;
    double floating64;
    reactor_string_t str;
    reactor_list_u8_t binary;
  } val;
} fermyon_spin_rdbms_types_db_value_t;

#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_BOOLEAN 0
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_INT8 1
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_INT16 2
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_INT32 3
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_INT64 4
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_UINT8 5
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_UINT16 6
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_UINT32 7
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_UINT64 8
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_FLOATING32 9
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_FLOATING64 10
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_STR 11
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_BINARY 12
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_DB_NULL 13
#define FERMYON_SPIN_RDBMS_TYPES_DB_VALUE_UNSUPPORTED 14

typedef struct {
  uint8_t tag;
  union {
    bool boolean;
    int8_t int8;
    int16_t int16;
    int32_t int32;
    int64_t int64;
    uint8_t uint8;
    uint16_t uint16;
    uint32_t uint32;
    uint64_t uint64;
    float floating32;
    double floating64;
    reactor_string_t str;
    reactor_list_u8_t binary;
  } val;
} fermyon_spin_rdbms_types_parameter_value_t;

#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_BOOLEAN 0
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_INT8 1
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_INT16 2
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_INT32 3
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_INT64 4
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_UINT8 5
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_UINT16 6
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_UINT32 7
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_UINT64 8
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_FLOATING32 9
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_FLOATING64 10
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_STR 11
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_BINARY 12
#define FERMYON_SPIN_RDBMS_TYPES_PARAMETER_VALUE_DB_NULL 13

typedef struct {
  reactor_string_t name;
  fermyon_spin_rdbms_types_db_data_type_t data_type;
} fermyon_spin_rdbms_types_column_t;

typedef struct {
  fermyon_spin_rdbms_types_db_value_t *ptr;
  size_t len;
} fermyon_spin_rdbms_types_row_t;

typedef struct {
  fermyon_spin_rdbms_types_column_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_rdbms_types_column_t;

typedef struct {
  fermyon_spin_rdbms_types_row_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_rdbms_types_row_t;

typedef struct {
  reactor_list_fermyon_spin_rdbms_types_column_t columns;
  reactor_list_fermyon_spin_rdbms_types_row_t rows;
} fermyon_spin_rdbms_types_row_set_t;

typedef fermyon_spin_rdbms_types_parameter_value_t fermyon_spin_mysql_parameter_value_t;

typedef fermyon_spin_rdbms_types_row_set_t fermyon_spin_mysql_row_set_t;

typedef struct {
  uint8_t tag;
  union {
    reactor_string_t connection_failed;
    reactor_string_t bad_parameter;
    reactor_string_t query_failed;
    reactor_string_t value_conversion_failed;
    reactor_string_t other_error;
  } val;
} fermyon_spin_mysql_mysql_error_t;

#define FERMYON_SPIN_MYSQL_MYSQL_ERROR_SUCCESS 0
#define FERMYON_SPIN_MYSQL_MYSQL_ERROR_CONNECTION_FAILED 1
#define FERMYON_SPIN_MYSQL_MYSQL_ERROR_BAD_PARAMETER 2
#define FERMYON_SPIN_MYSQL_MYSQL_ERROR_QUERY_FAILED 3
#define FERMYON_SPIN_MYSQL_MYSQL_ERROR_VALUE_CONVERSION_FAILED 4
#define FERMYON_SPIN_MYSQL_MYSQL_ERROR_OTHER_ERROR 5

typedef struct {
  fermyon_spin_mysql_parameter_value_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_mysql_parameter_value_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_mysql_row_set_t ok;
    fermyon_spin_mysql_mysql_error_t err;
  } val;
} reactor_result_fermyon_spin_mysql_row_set_fermyon_spin_mysql_mysql_error_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_mysql_mysql_error_t err;
  } val;
} reactor_result_void_fermyon_spin_mysql_mysql_error_t;

typedef fermyon_spin_rdbms_types_parameter_value_t fermyon_spin_postgres_parameter_value_t;

typedef fermyon_spin_rdbms_types_row_set_t fermyon_spin_postgres_row_set_t;

typedef struct {
  uint8_t tag;
  union {
    reactor_string_t connection_failed;
    reactor_string_t bad_parameter;
    reactor_string_t query_failed;
    reactor_string_t value_conversion_failed;
    reactor_string_t other_error;
  } val;
} fermyon_spin_postgres_pg_error_t;

#define FERMYON_SPIN_POSTGRES_PG_ERROR_SUCCESS 0
#define FERMYON_SPIN_POSTGRES_PG_ERROR_CONNECTION_FAILED 1
#define FERMYON_SPIN_POSTGRES_PG_ERROR_BAD_PARAMETER 2
#define FERMYON_SPIN_POSTGRES_PG_ERROR_QUERY_FAILED 3
#define FERMYON_SPIN_POSTGRES_PG_ERROR_VALUE_CONVERSION_FAILED 4
#define FERMYON_SPIN_POSTGRES_PG_ERROR_OTHER_ERROR 5

typedef struct {
  fermyon_spin_postgres_parameter_value_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_postgres_parameter_value_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_postgres_row_set_t ok;
    fermyon_spin_postgres_pg_error_t err;
  } val;
} reactor_result_fermyon_spin_postgres_row_set_fermyon_spin_postgres_pg_error_t;

typedef struct {
  bool is_err;
  union {
    uint64_t ok;
    fermyon_spin_postgres_pg_error_t err;
  } val;
} reactor_result_u64_fermyon_spin_postgres_pg_error_t;

typedef uint8_t fermyon_spin_redis_types_error_t;

#define FERMYON_SPIN_REDIS_TYPES_ERROR_SUCCESS 0
#define FERMYON_SPIN_REDIS_TYPES_ERROR_ERROR 1

typedef struct {
  uint8_t *ptr;
  size_t len;
} fermyon_spin_redis_types_payload_t;

typedef struct {
  uint8_t tag;
  union {
    int64_t int64;
    fermyon_spin_redis_types_payload_t binary;
  } val;
} fermyon_spin_redis_types_redis_parameter_t;

#define FERMYON_SPIN_REDIS_TYPES_REDIS_PARAMETER_INT64 0
#define FERMYON_SPIN_REDIS_TYPES_REDIS_PARAMETER_BINARY 1

typedef struct {
  uint8_t tag;
  union {
    reactor_string_t status;
    int64_t int64;
    fermyon_spin_redis_types_payload_t binary;
  } val;
} fermyon_spin_redis_types_redis_result_t;

#define FERMYON_SPIN_REDIS_TYPES_REDIS_RESULT_NIL 0
#define FERMYON_SPIN_REDIS_TYPES_REDIS_RESULT_STATUS 1
#define FERMYON_SPIN_REDIS_TYPES_REDIS_RESULT_INT64 2
#define FERMYON_SPIN_REDIS_TYPES_REDIS_RESULT_BINARY 3

typedef fermyon_spin_redis_types_payload_t fermyon_spin_inbound_redis_payload_t;

typedef fermyon_spin_redis_types_error_t fermyon_spin_inbound_redis_error_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_inbound_redis_error_t err;
  } val;
} reactor_result_void_fermyon_spin_inbound_redis_error_t;

typedef fermyon_spin_redis_types_payload_t fermyon_spin_redis_payload_t;

typedef fermyon_spin_redis_types_redis_parameter_t fermyon_spin_redis_redis_parameter_t;

typedef fermyon_spin_redis_types_redis_result_t fermyon_spin_redis_redis_result_t;

typedef fermyon_spin_redis_types_error_t fermyon_spin_redis_error_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_redis_error_t err;
  } val;
} reactor_result_void_fermyon_spin_redis_error_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_redis_payload_t ok;
    fermyon_spin_redis_error_t err;
  } val;
} reactor_result_fermyon_spin_redis_payload_fermyon_spin_redis_error_t;

typedef struct {
  bool is_err;
  union {
    int64_t ok;
    fermyon_spin_redis_error_t err;
  } val;
} reactor_result_s64_fermyon_spin_redis_error_t;

typedef struct {
  bool is_err;
  union {
    reactor_list_string_t ok;
    fermyon_spin_redis_error_t err;
  } val;
} reactor_result_list_string_fermyon_spin_redis_error_t;

typedef struct {
  fermyon_spin_redis_redis_parameter_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_redis_redis_parameter_t;

typedef struct {
  fermyon_spin_redis_redis_result_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_redis_redis_result_t;

typedef struct {
  bool is_err;
  union {
    reactor_list_fermyon_spin_redis_redis_result_t ok;
    fermyon_spin_redis_error_t err;
  } val;
} reactor_result_list_fermyon_spin_redis_redis_result_fermyon_spin_redis_error_t;

typedef uint32_t fermyon_spin_sqlite_connection_t;

typedef struct {
  uint8_t tag;
  union {
    reactor_string_t io;
  } val;
} fermyon_spin_sqlite_error_t;

#define FERMYON_SPIN_SQLITE_ERROR_NO_SUCH_DATABASE 0
#define FERMYON_SPIN_SQLITE_ERROR_ACCESS_DENIED 1
#define FERMYON_SPIN_SQLITE_ERROR_INVALID_CONNECTION 2
#define FERMYON_SPIN_SQLITE_ERROR_DATABASE_FULL 3
#define FERMYON_SPIN_SQLITE_ERROR_IO 4

typedef struct {
  uint8_t tag;
  union {
    int64_t integer;
    double real;
    reactor_string_t text;
    reactor_list_u8_t blob;
  } val;
} fermyon_spin_sqlite_value_t;

#define FERMYON_SPIN_SQLITE_VALUE_INTEGER 0
#define FERMYON_SPIN_SQLITE_VALUE_REAL 1
#define FERMYON_SPIN_SQLITE_VALUE_TEXT 2
#define FERMYON_SPIN_SQLITE_VALUE_BLOB 3
#define FERMYON_SPIN_SQLITE_VALUE_NULL 4

typedef struct {
  fermyon_spin_sqlite_value_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_sqlite_value_t;

typedef struct {
  reactor_list_fermyon_spin_sqlite_value_t values;
} fermyon_spin_sqlite_row_result_t;

typedef struct {
  fermyon_spin_sqlite_row_result_t *ptr;
  size_t len;
} reactor_list_fermyon_spin_sqlite_row_result_t;

typedef struct {
  reactor_list_string_t columns;
  reactor_list_fermyon_spin_sqlite_row_result_t rows;
} fermyon_spin_sqlite_query_result_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_sqlite_connection_t ok;
    fermyon_spin_sqlite_error_t err;
  } val;
} reactor_result_fermyon_spin_sqlite_connection_fermyon_spin_sqlite_error_t;

typedef struct {
  bool is_err;
  union {
    fermyon_spin_sqlite_query_result_t ok;
    fermyon_spin_sqlite_error_t err;
  } val;
} reactor_result_fermyon_spin_sqlite_query_result_fermyon_spin_sqlite_error_t;

// Imported Functions from `fermyon:spin/config`
void fermyon_spin_config_get_config(reactor_string_t *key, reactor_result_string_fermyon_spin_config_error_t *ret);

// Imported Functions from `fermyon:spin/postgres`
void fermyon_spin_postgres_query(reactor_string_t *address, reactor_string_t *statement, reactor_list_fermyon_spin_postgres_parameter_value_t *params, reactor_result_fermyon_spin_postgres_row_set_fermyon_spin_postgres_pg_error_t *ret);
void fermyon_spin_postgres_execute(reactor_string_t *address, reactor_string_t *statement, reactor_list_fermyon_spin_postgres_parameter_value_t *params, reactor_result_u64_fermyon_spin_postgres_pg_error_t *ret);

// Imported Functions from `fermyon:spin/mysql`
void fermyon_spin_mysql_query(reactor_string_t *address, reactor_string_t *statement, reactor_list_fermyon_spin_mysql_parameter_value_t *params, reactor_result_fermyon_spin_mysql_row_set_fermyon_spin_mysql_mysql_error_t *ret);
void fermyon_spin_mysql_execute(reactor_string_t *address, reactor_string_t *statement, reactor_list_fermyon_spin_mysql_parameter_value_t *params, reactor_result_void_fermyon_spin_mysql_mysql_error_t *ret);

// Imported Functions from `fermyon:spin/sqlite`
void fermyon_spin_sqlite_open(reactor_string_t *database, reactor_result_fermyon_spin_sqlite_connection_fermyon_spin_sqlite_error_t *ret);
void fermyon_spin_sqlite_execute(fermyon_spin_sqlite_connection_t conn, reactor_string_t *statement, reactor_list_fermyon_spin_sqlite_value_t *parameters, reactor_result_fermyon_spin_sqlite_query_result_fermyon_spin_sqlite_error_t *ret);
void fermyon_spin_sqlite_close(fermyon_spin_sqlite_connection_t conn);

// Imported Functions from `fermyon:spin/redis`
void fermyon_spin_redis_publish(reactor_string_t *address, reactor_string_t *channel, fermyon_spin_redis_payload_t *payload, reactor_result_void_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_get(reactor_string_t *address, reactor_string_t *key, reactor_result_fermyon_spin_redis_payload_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_set(reactor_string_t *address, reactor_string_t *key, fermyon_spin_redis_payload_t *value, reactor_result_void_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_incr(reactor_string_t *address, reactor_string_t *key, reactor_result_s64_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_del(reactor_string_t *address, reactor_list_string_t *keys, reactor_result_s64_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_sadd(reactor_string_t *address, reactor_string_t *key, reactor_list_string_t *values, reactor_result_s64_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_smembers(reactor_string_t *address, reactor_string_t *key, reactor_result_list_string_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_srem(reactor_string_t *address, reactor_string_t *key, reactor_list_string_t *values, reactor_result_s64_fermyon_spin_redis_error_t *ret);
void fermyon_spin_redis_execute(reactor_string_t *address, reactor_string_t *command, reactor_list_fermyon_spin_redis_redis_parameter_t *arguments, reactor_result_list_fermyon_spin_redis_redis_result_fermyon_spin_redis_error_t *ret);

// Imported Functions from `fermyon:spin/key-value`
void fermyon_spin_key_value_open(reactor_string_t *name, reactor_result_fermyon_spin_key_value_store_fermyon_spin_key_value_error_t *ret);
void fermyon_spin_key_value_get(fermyon_spin_key_value_store_t store, reactor_string_t *key, reactor_result_list_u8_fermyon_spin_key_value_error_t *ret);
void fermyon_spin_key_value_set(fermyon_spin_key_value_store_t store, reactor_string_t *key, reactor_list_u8_t *value, reactor_result_void_fermyon_spin_key_value_error_t *ret);
void fermyon_spin_key_value_delete(fermyon_spin_key_value_store_t store, reactor_string_t *key, reactor_result_void_fermyon_spin_key_value_error_t *ret);
void fermyon_spin_key_value_exists(fermyon_spin_key_value_store_t store, reactor_string_t *key, reactor_result_bool_fermyon_spin_key_value_error_t *ret);
void fermyon_spin_key_value_get_keys(fermyon_spin_key_value_store_t store, reactor_result_list_string_fermyon_spin_key_value_error_t *ret);
void fermyon_spin_key_value_close(fermyon_spin_key_value_store_t store);

// Imported Functions from `fermyon:spin/http`
void fermyon_spin_http_send_request(fermyon_spin_http_request_t *req, reactor_result_fermyon_spin_http_response_fermyon_spin_http_http_error_t *ret);

// Exported Functions from `fermyon:spin/inbound-http`
void exports_fermyon_spin_inbound_http_handle_request(fermyon_spin_inbound_http_request_t *req, fermyon_spin_inbound_http_response_t *ret);

// Exported Functions from `fermyon:spin/inbound-redis`
void exports_fermyon_spin_inbound_redis_handle_message(fermyon_spin_inbound_redis_payload_t *message, reactor_result_void_fermyon_spin_inbound_redis_error_t *ret);

// Helper Functions

void fermyon_spin_config_error_free(fermyon_spin_config_error_t *ptr);
void reactor_result_string_fermyon_spin_config_error_free(reactor_result_string_fermyon_spin_config_error_t *ptr);
void fermyon_spin_http_types_body_free(fermyon_spin_http_types_body_t *ptr);
void reactor_tuple2_string_string_free(reactor_tuple2_string_string_t *ptr);
void fermyon_spin_http_types_headers_free(fermyon_spin_http_types_headers_t *ptr);
void fermyon_spin_http_types_params_free(fermyon_spin_http_types_params_t *ptr);
void fermyon_spin_http_types_uri_free(fermyon_spin_http_types_uri_t *ptr);
void reactor_option_fermyon_spin_http_types_body_free(reactor_option_fermyon_spin_http_types_body_t *ptr);
void fermyon_spin_http_types_request_free(fermyon_spin_http_types_request_t *ptr);
void reactor_option_fermyon_spin_http_types_headers_free(reactor_option_fermyon_spin_http_types_headers_t *ptr);
void fermyon_spin_http_types_response_free(fermyon_spin_http_types_response_t *ptr);
void fermyon_spin_http_request_free(fermyon_spin_http_request_t *ptr);
void fermyon_spin_http_response_free(fermyon_spin_http_response_t *ptr);
void reactor_result_fermyon_spin_http_response_fermyon_spin_http_http_error_free(reactor_result_fermyon_spin_http_response_fermyon_spin_http_http_error_t *ptr);
void fermyon_spin_inbound_http_request_free(fermyon_spin_inbound_http_request_t *ptr);
void fermyon_spin_inbound_http_response_free(fermyon_spin_inbound_http_response_t *ptr);
void fermyon_spin_key_value_error_free(fermyon_spin_key_value_error_t *ptr);
void reactor_result_fermyon_spin_key_value_store_fermyon_spin_key_value_error_free(reactor_result_fermyon_spin_key_value_store_fermyon_spin_key_value_error_t *ptr);
void reactor_list_u8_free(reactor_list_u8_t *ptr);
void reactor_result_list_u8_fermyon_spin_key_value_error_free(reactor_result_list_u8_fermyon_spin_key_value_error_t *ptr);
void reactor_result_void_fermyon_spin_key_value_error_free(reactor_result_void_fermyon_spin_key_value_error_t *ptr);
void reactor_result_bool_fermyon_spin_key_value_error_free(reactor_result_bool_fermyon_spin_key_value_error_t *ptr);
void reactor_list_string_free(reactor_list_string_t *ptr);
void reactor_result_list_string_fermyon_spin_key_value_error_free(reactor_result_list_string_fermyon_spin_key_value_error_t *ptr);
void fermyon_spin_rdbms_types_db_value_free(fermyon_spin_rdbms_types_db_value_t *ptr);
void fermyon_spin_rdbms_types_parameter_value_free(fermyon_spin_rdbms_types_parameter_value_t *ptr);
void fermyon_spin_rdbms_types_column_free(fermyon_spin_rdbms_types_column_t *ptr);
void fermyon_spin_rdbms_types_row_free(fermyon_spin_rdbms_types_row_t *ptr);
void reactor_list_fermyon_spin_rdbms_types_column_free(reactor_list_fermyon_spin_rdbms_types_column_t *ptr);
void reactor_list_fermyon_spin_rdbms_types_row_free(reactor_list_fermyon_spin_rdbms_types_row_t *ptr);
void fermyon_spin_rdbms_types_row_set_free(fermyon_spin_rdbms_types_row_set_t *ptr);
void fermyon_spin_mysql_parameter_value_free(fermyon_spin_mysql_parameter_value_t *ptr);
void fermyon_spin_mysql_row_set_free(fermyon_spin_mysql_row_set_t *ptr);
void fermyon_spin_mysql_mysql_error_free(fermyon_spin_mysql_mysql_error_t *ptr);
void reactor_list_fermyon_spin_mysql_parameter_value_free(reactor_list_fermyon_spin_mysql_parameter_value_t *ptr);
void reactor_result_fermyon_spin_mysql_row_set_fermyon_spin_mysql_mysql_error_free(reactor_result_fermyon_spin_mysql_row_set_fermyon_spin_mysql_mysql_error_t *ptr);
void reactor_result_void_fermyon_spin_mysql_mysql_error_free(reactor_result_void_fermyon_spin_mysql_mysql_error_t *ptr);
void fermyon_spin_postgres_parameter_value_free(fermyon_spin_postgres_parameter_value_t *ptr);
void fermyon_spin_postgres_row_set_free(fermyon_spin_postgres_row_set_t *ptr);
void fermyon_spin_postgres_pg_error_free(fermyon_spin_postgres_pg_error_t *ptr);
void reactor_list_fermyon_spin_postgres_parameter_value_free(reactor_list_fermyon_spin_postgres_parameter_value_t *ptr);
void reactor_result_fermyon_spin_postgres_row_set_fermyon_spin_postgres_pg_error_free(reactor_result_fermyon_spin_postgres_row_set_fermyon_spin_postgres_pg_error_t *ptr);
void reactor_result_u64_fermyon_spin_postgres_pg_error_free(reactor_result_u64_fermyon_spin_postgres_pg_error_t *ptr);
void fermyon_spin_redis_types_payload_free(fermyon_spin_redis_types_payload_t *ptr);
void fermyon_spin_redis_types_redis_parameter_free(fermyon_spin_redis_types_redis_parameter_t *ptr);
void fermyon_spin_redis_types_redis_result_free(fermyon_spin_redis_types_redis_result_t *ptr);
void fermyon_spin_inbound_redis_payload_free(fermyon_spin_inbound_redis_payload_t *ptr);
void fermyon_spin_redis_payload_free(fermyon_spin_redis_payload_t *ptr);
void fermyon_spin_redis_redis_parameter_free(fermyon_spin_redis_redis_parameter_t *ptr);
void fermyon_spin_redis_redis_result_free(fermyon_spin_redis_redis_result_t *ptr);
void reactor_result_fermyon_spin_redis_payload_fermyon_spin_redis_error_free(reactor_result_fermyon_spin_redis_payload_fermyon_spin_redis_error_t *ptr);
void reactor_result_list_string_fermyon_spin_redis_error_free(reactor_result_list_string_fermyon_spin_redis_error_t *ptr);
void reactor_list_fermyon_spin_redis_redis_parameter_free(reactor_list_fermyon_spin_redis_redis_parameter_t *ptr);
void reactor_list_fermyon_spin_redis_redis_result_free(reactor_list_fermyon_spin_redis_redis_result_t *ptr);
void reactor_result_list_fermyon_spin_redis_redis_result_fermyon_spin_redis_error_free(reactor_result_list_fermyon_spin_redis_redis_result_fermyon_spin_redis_error_t *ptr);
void fermyon_spin_sqlite_error_free(fermyon_spin_sqlite_error_t *ptr);
void fermyon_spin_sqlite_value_free(fermyon_spin_sqlite_value_t *ptr);
void reactor_list_fermyon_spin_sqlite_value_free(reactor_list_fermyon_spin_sqlite_value_t *ptr);
void fermyon_spin_sqlite_row_result_free(fermyon_spin_sqlite_row_result_t *ptr);
void reactor_list_fermyon_spin_sqlite_row_result_free(reactor_list_fermyon_spin_sqlite_row_result_t *ptr);
void fermyon_spin_sqlite_query_result_free(fermyon_spin_sqlite_query_result_t *ptr);
void reactor_result_fermyon_spin_sqlite_connection_fermyon_spin_sqlite_error_free(reactor_result_fermyon_spin_sqlite_connection_fermyon_spin_sqlite_error_t *ptr);
void reactor_result_fermyon_spin_sqlite_query_result_fermyon_spin_sqlite_error_free(reactor_result_fermyon_spin_sqlite_query_result_fermyon_spin_sqlite_error_t *ptr);
void reactor_string_set(reactor_string_t *ret, const char*s);
void reactor_string_dup(reactor_string_t *ret, const char*s);
void reactor_string_free(reactor_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
