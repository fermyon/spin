# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Rust
on:
  push:
    branches: [main]
    # Also run on tag pushes, as the release.yml doesn't currently run tests
    tags: ["v*"]
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build Spin
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
              os: "ubuntu-latest",
              arch: "amd64",
              extension: "",
              extraArgs: "",
              target: "",
              targetDir: "target/release",
              bindleUrl: "https://bindle.blob.core.windows.net/releases/bindle-v0.8.0-linux-amd64.tar.gz",
              bindleBinary: "bindle-server",
              pathInBindleArchive: "bindle-server",
            }
          - {
              os: "macos-latest",
              arch: "aarch64",
              extension: "",
              extraArgs: "--target aarch64-apple-darwin",
              target: "aarch64-apple-darwin",
              targetDir: "target/aarch64-apple-darwin/release/",
              bindleUrl: "https://bindle.blob.core.windows.net/releases/bindle-v0.8.0-macos-amd64.tar.gz",
              bindleBinary: "bindle-server",
              pathInBindleArchive: "bindle-server",
            }
          - {
              os: "windows-latest",
              arch: "amd64",
              extension: ".exe",
              extraArgs: "",
              target: "",
              targetDir: "target/release",
              bindleUrl: "https://bindle.blob.core.windows.net/releases/bindle-v0.8.0-windows-amd64.tar.gz",
              bindleBinary: "bindle-server.exe",
              pathInBindleArchive: "bindle-server.exe",
            }
    steps:
      - uses: actions/checkout@v2

      - name: Install latest Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt

      - name: "Install Wasm Rust target"
        run: rustup target add wasm32-wasi

      - uses: engineerd/configurator@v0.0.8
        with:
          name: ${{ matrix.config.bindleBinary }}
          url: ${{ matrix.config.bindleUrl }}
          pathInArchive: ${{ matrix.config.pathInBindleArchive }}


      - uses: Swatinem/rust-cache@v1

      - name: Cargo Format
        run:
          cargo fmt --all -- --check

      - name: Cargo Clippy
        run:
          cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Cargo Build
        run: cargo build --workspace --all-targets --all-features

      - name: Cargo Test
        run:
          cargo test --workspace --all-targets --all-features --no-fail-fast -- --nocapture
        env:
          RUST_LOG: spin=trace

    # Cancel in-progress runs for PRs
    # https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
    concurrency:
      group: ${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
